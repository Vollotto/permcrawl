{"android.permission.MANAGE_ACCOUNTS": ["android.accounts.AccountManager.clearPassword(android.accounts.Account)void  ", "android.accounts.AccountManager.invalidateAuthToken(java.lang.String,java.lang.String)void  "], "android.permission.ACCESS_NETWORK_STATE": ["android.net.ConnectivityManager.getActiveNetworkInfo()android.net.NetworkInfo  ", "android.net.ConnectivityManager.getAllNetworkInfo()android.net.NetworkInfo[]  ", "android.net.ConnectivityManager.getAllNetworks()android.net.Network[]  ", "android.net.ConnectivityManager.getLinkProperties(android.net.Network)android.net.LinkProperties  ", "android.net.ConnectivityManager.getNetworkCapabilities(android.net.Network)android.net.NetworkCapabilities  ", "android.net.ConnectivityManager.getNetworkInfo(android.net.Network)android.net.NetworkInfo  ", "android.net.ConnectivityManager.getNetworkInfo(int)android.net.NetworkInfo  ", "android.net.ConnectivityManager.isActiveNetworkMetered()boolean  ", "android.net.ConnectivityManager.registerNetworkCallback(android.net.NetworkRequest,android.net.ConnectivityManager$NetworkCallback)void  ", "android.net.ConnectivityManager.reportBadNetwork(android.net.Network)void  ", "android.net.ConnectivityManager.requestNetwork(android.net.NetworkRequest,android.net.ConnectivityManager$NetworkCallback)void  ", "android.net.ConnectivityManager.startUsingNetworkFeature(int,java.lang.String)int  "], "android.permission.CHANGE_NETWORK_STATE": ["android.net.ConnectivityManager.registerNetworkCallback(android.net.NetworkRequest,android.net.ConnectivityManager$NetworkCallback)void  ", "android.net.ConnectivityManager.requestNetwork(android.net.NetworkRequest,android.net.ConnectivityManager$NetworkCallback)void  ", "android.net.ConnectivityManager.requestRouteToHost(int,int)boolean  ", "android.net.ConnectivityManager.startUsingNetworkFeature(int,java.lang.String)int  "], "android.permission.NFC": ["android.nfc.NfcAdapter.disableForegroundDispatch(android.app.Activity)void  ", "android.nfc.NfcAdapter.disableForegroundNdefPush(android.app.Activity)void  ", "android.nfc.NfcAdapter.enableForegroundDispatch(android.app.Activity,android.app.PendingIntent,[android.content.IntentFilter,[[java.lang.String)void  ", "android.nfc.NfcAdapter.enableForegroundNdefPush(android.app.Activity,android.nfc.NdefMessage)void  ", "android.nfc.NfcAdapter.invokeBeam(android.app.Activity)boolean  ", "android.nfc.NfcAdapter.setBeamPushUris([android.net.Uri,android.app.Activity)void  ", "android.nfc.NfcAdapter.setBeamPushUrisCallback(android.nfc.NfcAdapter$CreateBeamUrisCallback,android.app.Activity)void  ", "android.nfc.NfcAdapter.setNdefPushMessage(android.nfc.NdefMessage,android.app.Activity,[android.app.Activity)void  ", "android.nfc.NfcAdapter.setNdefPushMessageCallback(android.nfc.NfcAdapter$CreateNdefMessageCallback,android.app.Activity,[android.app.Activity)void  ", "android.nfc.NfcAdapter.setOnNdefPushCompleteCallback(android.nfc.NfcAdapter$OnNdefPushCompleteCallback,android.app.Activity,[android.app.Activity)void  ", "android.nfc.cardemulation.CardEmulation.getAidsForService(android.content.ComponentName,java.lang.String)java.util.List  ", "android.nfc.cardemulation.CardEmulation.isDefaultServiceForAid(android.content.ComponentName,java.lang.String)boolean  ", "android.nfc.cardemulation.CardEmulation.isDefaultServiceForCategory(android.content.ComponentName,java.lang.String)boolean  ", "android.nfc.cardemulation.CardEmulation.registerAidsForService(android.content.ComponentName,java.lang.String,java.util.List)boolean  ", "android.nfc.cardemulation.CardEmulation.removeAidsForService(android.content.ComponentName,java.lang.String)boolean  ", "android.nfc.cardemulation.CardEmulation.setPreferredService(android.app.Activity,android.content.ComponentName)boolean  ", "android.nfc.cardemulation.CardEmulation.unsetPreferredService(android.app.Activity)boolean  ", "android.nfc.tech.BasicTagTechnology.close()void  ", "android.nfc.tech.BasicTagTechnology.connect()void  ", "android.nfc.tech.IsoDep.close()void  ", "android.nfc.tech.IsoDep.connect()void  ", "android.nfc.tech.IsoDep.getTimeout()int  ", "android.nfc.tech.IsoDep.setTimeout(int)void  ", "android.nfc.tech.IsoDep.transceive([byte)B[]  ", "android.nfc.tech.MifareClassic.authenticateSectorWithKeyA(int,[byte)boolean  ", "android.nfc.tech.MifareClassic.authenticateSectorWithKeyB(int,[byte)boolean  ", "android.nfc.tech.MifareClassic.close()void  ", "android.nfc.tech.MifareClassic.connect()void  ", "android.nfc.tech.MifareClassic.decrement(int,int)void  ", "android.nfc.tech.MifareClassic.getTimeout()int  ", "android.nfc.tech.MifareClassic.increment(int,int)void  ", "android.nfc.tech.MifareClassic.readBlock(int)B[]  ", "android.nfc.tech.MifareClassic.restore(int)void  ", "android.nfc.tech.MifareClassic.setTimeout(int)void  ", "android.nfc.tech.MifareClassic.transceive([byte)B[]  ", "android.nfc.tech.MifareClassic.transfer(int)void  ", "android.nfc.tech.MifareClassic.writeBlock(int,[byte)void  ", "android.nfc.tech.MifareUltralight.close()void  ", "android.nfc.tech.MifareUltralight.connect()void  ", "android.nfc.tech.MifareUltralight.getTimeout()int  ", "android.nfc.tech.MifareUltralight.readPages(int)B[]  ", "android.nfc.tech.MifareUltralight.setTimeout(int)void  ", "android.nfc.tech.MifareUltralight.transceive([byte)B[]  ", "android.nfc.tech.MifareUltralight.writePage(int,[byte)void  ", "android.nfc.tech.Ndef.close()void  ", "android.nfc.tech.Ndef.connect()void  ", "android.nfc.tech.Ndef.getNdefMessage()android.nfc.NdefMessage  ", "android.nfc.tech.Ndef.makeReadOnly()boolean  ", "android.nfc.tech.Ndef.writeNdefMessage(android.nfc.NdefMessage)void  ", "android.nfc.tech.NdefFormatable.close()void  ", "android.nfc.tech.NdefFormatable.connect()void  ", "android.nfc.tech.NdefFormatable.format(android.nfc.NdefMessage)void  ", "android.nfc.tech.NdefFormatable.formatReadOnly(android.nfc.NdefMessage)void  ", "android.nfc.tech.NfcA.close()void  ", "android.nfc.tech.NfcA.connect()void  ", "android.nfc.tech.NfcA.getTimeout()int  ", "android.nfc.tech.NfcA.setTimeout(int)void  ", "android.nfc.tech.NfcA.transceive([byte)B[]  ", "android.nfc.tech.NfcB.close()void  ", "android.nfc.tech.NfcB.connect()void  ", "android.nfc.tech.NfcB.transceive([byte)B[]  ", "android.nfc.tech.NfcBarcode.close()void  ", "android.nfc.tech.NfcBarcode.connect()void  ", "android.nfc.tech.NfcF.close()void  ", "android.nfc.tech.NfcF.connect()void  ", "android.nfc.tech.NfcF.getTimeout()int  ", "android.nfc.tech.NfcF.setTimeout(int)void  ", "android.nfc.tech.NfcF.transceive([byte)B[]  ", "android.nfc.tech.NfcV.close()void  ", "android.nfc.tech.NfcV.connect()void  ", "android.nfc.tech.NfcV.transceive([byte)B[]  "], "android.permission.SET_WALLPAPER_HINTS": ["android.app.WallpaperManager.suggestDesiredDimensions(int,int)void  "], "android.permission.REORDER_TASKS": ["android.app.ActivityManager.moveTaskToFront(int,int)void  ", "android.app.ActivityManager.moveTaskToFront(int,int,android.os.Bundle)void  "], "android.permission.SEND_SMS": ["android.telephony.SmsManager.sendDataMessage(java.lang.String,java.lang.String,short,[byte,android.app.PendingIntent,android.app.PendingIntent)void  ", "android.telephony.SmsManager.sendMultimediaMessage(android.content.Context,android.net.Uri,java.lang.String,android.os.Bundle,android.app.PendingIntent)void  ", "android.telephony.SmsManager.sendMultipartTextMessage(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)void  ", "android.telephony.SmsManager.sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)void  ", "android.telephony.gsm.SmsManager.sendDataMessage(java.lang.String,java.lang.String,short,[byte,android.app.PendingIntent,android.app.PendingIntent)void  ", "android.telephony.gsm.SmsManager.sendMultipartTextMessage(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)void  ", "android.telephony.gsm.SmsManager.sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)void  "], "android.permission.CHANGE_WIFI_STATE": ["android.net.wifi.WifiManager.addNetwork(android.net.wifi.WifiConfiguration)int  ", "android.net.wifi.WifiManager.disableNetwork(int)boolean  ", "android.net.wifi.WifiManager.disconnect()boolean  ", "android.net.wifi.WifiManager.enableNetwork(int,boolean)boolean  ", "android.net.wifi.WifiManager.reassociate()boolean  ", "android.net.wifi.WifiManager.reconnect()boolean  ", "android.net.wifi.WifiManager.removeNetwork(int)boolean  ", "android.net.wifi.WifiManager.saveConfiguration()boolean  ", "android.net.wifi.WifiManager.setWifiEnabled(boolean)boolean  ", "android.net.wifi.WifiManager.startScan()boolean  ", "android.net.wifi.WifiManager.updateNetwork(android.net.wifi.WifiConfiguration)int  ", "android.net.wifi.p2p.WifiP2pManager.initialize(android.content.Context,android.os.Looper,android.net.wifi.p2p.WifiP2pManager$ChannelListener)android.net.wifi.p2p.WifiP2pManager$Channel  "], "android.permission.USE_SIP": ["android.net.sip.SipManager.close(java.lang.String)void  ", "android.net.sip.SipManager.createSipSession(android.net.sip.SipProfile,android.net.sip.SipSession$Listener)android.net.sip.SipSession  ", "android.net.sip.SipManager.getSessionFor(android.content.Intent)android.net.sip.SipSession  ", "android.net.sip.SipManager.isOpened(java.lang.String)boolean  ", "android.net.sip.SipManager.isRegistered(java.lang.String)boolean  ", "android.net.sip.SipManager.makeAudioCall(android.net.sip.SipProfile,android.net.sip.SipProfile,android.net.sip.SipAudioCall$Listener,int)android.net.sip.SipAudioCall  ", "android.net.sip.SipManager.makeAudioCall(java.lang.String,java.lang.String,android.net.sip.SipAudioCall$Listener,int)android.net.sip.SipAudioCall  ", "android.net.sip.SipManager.open(android.net.sip.SipProfile)void  ", "android.net.sip.SipManager.open(android.net.sip.SipProfile,android.app.PendingIntent,android.net.sip.SipRegistrationListener)void  ", "android.net.sip.SipManager.register(android.net.sip.SipProfile,int,android.net.sip.SipRegistrationListener)void  ", "android.net.sip.SipManager.setRegistrationListener(java.lang.String,android.net.sip.SipRegistrationListener)void  ", "android.net.sip.SipManager.takeAudioCall(android.content.Intent,android.net.sip.SipAudioCall$Listener)android.net.sip.SipAudioCall  ", "android.net.sip.SipManager.unregister(android.net.sip.SipProfile,android.net.sip.SipRegistrationListener)void  "], "android.permission.KILL_BACKGROUND_PROCESSES": ["android.app.ActivityManager.killBackgroundProcesses(java.lang.String)void  ", "android.app.ActivityManager.restartPackage(java.lang.String)void  "], "android.permission.WAKE_LOCK": ["android.media.AsyncPlayer.play(android.content.Context,android.net.Uri,boolean,int)void  ", "android.media.AsyncPlayer.stop()void  ", "android.media.MediaPlayer.pause()void  ", "android.media.MediaPlayer.release()void  ", "android.media.MediaPlayer.reset()void  ", "android.media.MediaPlayer.setWakeMode(android.content.Context,int)void  ", "android.media.MediaPlayer.start()void  ", "android.media.MediaPlayer.stop()void  ", "android.media.Ringtone.play()void  ", "android.media.Ringtone.setAudioAttributes(android.media.AudioAttributes)void  ", "android.media.Ringtone.setStreamType(int)void  ", "android.media.Ringtone.stop()void  ", "android.media.RingtoneManager.getRingtone(android.content.Context,android.net.Uri)android.media.Ringtone  ", "android.media.RingtoneManager.getRingtone(int)android.media.Ringtone  ", "android.media.RingtoneManager.stopPreviousRingtone()void  ", "android.net.sip.SipAudioCall.close()void  ", "android.net.sip.SipAudioCall.endCall()void  ", "android.net.sip.SipAudioCall.startAudio()void  ", "android.net.wifi.WifiManager$WifiLock.acquire()void  ", "android.net.wifi.WifiManager$WifiLock.release()void  ", "android.os.PowerManager$WakeLock.acquire()void  ", "android.os.PowerManager$WakeLock.acquire(long)void  ", "android.os.PowerManager$WakeLock.release()void  ", "android.os.PowerManager$WakeLock.release(int)void  ", "android.os.PowerManager$WakeLock.setWorkSource(android.os.WorkSource)void  ", "android.widget.VideoView.getAudioSessionId()int  ", "android.widget.VideoView.onKeyDown(int,android.view.KeyEvent)boolean  ", "android.widget.VideoView.pause()void  ", "android.widget.VideoView.resume()void  ", "android.widget.VideoView.setVideoPath(java.lang.String)void  ", "android.widget.VideoView.setVideoURI(android.net.Uri)void  ", "android.widget.VideoView.setVideoURI(android.net.Uri,java.util.Map)void  ", "android.widget.VideoView.start()void  ", "android.widget.VideoView.stopPlayback()void  ", "android.widget.VideoView.suspend()void  "], "android.permission.VIBRATE": ["android.os.SystemVibrator.cancel()void  ", "android.os.SystemVibrator.vibrate(int,java.lang.String,[long,int,android.media.AudioAttributes)void  ", "android.os.SystemVibrator.vibrate(int,java.lang.String,long,android.media.AudioAttributes)void  "], "android.permission.SET_WALLPAPER": ["android.accounts.AccountAuthenticatorActivity.clearWallpaper()void  ", "android.accounts.AccountAuthenticatorActivity.setWallpaper(android.graphics.Bitmap)void  ", "android.accounts.AccountAuthenticatorActivity.setWallpaper(java.io.InputStream)void  ", "android.app.Activity.clearWallpaper()void  ", "android.app.Activity.setWallpaper(android.graphics.Bitmap)void  ", "android.app.Activity.setWallpaper(java.io.InputStream)void  ", "android.app.ActivityGroup.clearWallpaper()void  ", "android.app.ActivityGroup.setWallpaper(android.graphics.Bitmap)void  ", "android.app.ActivityGroup.setWallpaper(java.io.InputStream)void  ", "android.app.AliasActivity.clearWallpaper()void  ", "android.app.AliasActivity.setWallpaper(android.graphics.Bitmap)void  ", "android.app.AliasActivity.setWallpaper(java.io.InputStream)void  ", "android.app.Application.clearWallpaper()void  ", "android.app.Application.setWallpaper(android.graphics.Bitmap)void  ", "android.app.Application.setWallpaper(java.io.InputStream)void  ", "android.app.ExpandableListActivity.clearWallpaper()void  ", "android.app.ExpandableListActivity.setWallpaper(android.graphics.Bitmap)void  ", "android.app.ExpandableListActivity.setWallpaper(java.io.InputStream)void  ", "android.app.ListActivity.clearWallpaper()void  ", "android.app.ListActivity.setWallpaper(android.graphics.Bitmap)void  ", "android.app.ListActivity.setWallpaper(java.io.InputStream)void  ", "android.app.NativeActivity.clearWallpaper()void  ", "android.app.NativeActivity.setWallpaper(android.graphics.Bitmap)void  ", "android.app.NativeActivity.setWallpaper(java.io.InputStream)void  ", "android.app.TabActivity.clearWallpaper()void  ", "android.app.TabActivity.setWallpaper(android.graphics.Bitmap)void  ", "android.app.TabActivity.setWallpaper(java.io.InputStream)void  ", "android.app.WallpaperManager.clear()void  ", "android.app.WallpaperManager.setBitmap(android.graphics.Bitmap)void  ", "android.app.WallpaperManager.setResource(int)void  ", "android.app.WallpaperManager.setStream(java.io.InputStream)void  ", "android.app.backup.BackupAgentHelper.clearWallpaper()void  ", "android.app.backup.BackupAgentHelper.setWallpaper(android.graphics.Bitmap)void  ", "android.app.backup.BackupAgentHelper.setWallpaper(java.io.InputStream)void  ", "android.content.ContextWrapper.clearWallpaper()void  ", "android.content.ContextWrapper.setWallpaper(android.graphics.Bitmap)void  ", "android.content.ContextWrapper.setWallpaper(java.io.InputStream)void  ", "android.content.MutableContextWrapper.clearWallpaper()void  ", "android.content.MutableContextWrapper.setWallpaper(android.graphics.Bitmap)void  ", "android.content.MutableContextWrapper.setWallpaper(java.io.InputStream)void  ", "android.inputmethodservice.InputMethodService.clearWallpaper()void  ", "android.inputmethodservice.InputMethodService.setWallpaper(android.graphics.Bitmap)void  ", "android.inputmethodservice.InputMethodService.setWallpaper(java.io.InputStream)void  ", "android.net.VpnService.clearWallpaper()void  ", "android.net.VpnService.setWallpaper(android.graphics.Bitmap)void  ", "android.net.VpnService.setWallpaper(java.io.InputStream)void  ", "android.service.dreams.DreamService.clearWallpaper()void  ", "android.service.dreams.DreamService.setWallpaper(android.graphics.Bitmap)void  ", "android.service.dreams.DreamService.setWallpaper(java.io.InputStream)void  ", "android.service.voice.VoiceInteractionService.clearWallpaper()void  ", "android.service.voice.VoiceInteractionService.setWallpaper(android.graphics.Bitmap)void  ", "android.service.voice.VoiceInteractionService.setWallpaper(java.io.InputStream)void  ", "android.test.IsolatedContext.clearWallpaper()void  ", "android.test.IsolatedContext.setWallpaper(android.graphics.Bitmap)void  ", "android.test.IsolatedContext.setWallpaper(java.io.InputStream)void  ", "android.test.RenamingDelegatingContext.clearWallpaper()void  ", "android.test.RenamingDelegatingContext.setWallpaper(android.graphics.Bitmap)void  ", "android.test.RenamingDelegatingContext.setWallpaper(java.io.InputStream)void  ", "android.test.mock.MockApplication.clearWallpaper()void  ", "android.test.mock.MockApplication.setWallpaper(android.graphics.Bitmap)void  ", "android.test.mock.MockApplication.setWallpaper(java.io.InputStream)void  ", "android.view.ContextThemeWrapper.clearWallpaper()void  ", "android.view.ContextThemeWrapper.setWallpaper(android.graphics.Bitmap)void  ", "android.view.ContextThemeWrapper.setWallpaper(java.io.InputStream)void  "], "android.permission.GET_TASKS": ["android.app.ActivityManager.getRecentTasks(int,int)java.util.List  ", "android.app.ActivityManager.getRunningTasks(int)java.util.List  "], "android.permission.CHANGE_WIFI_MULTICAST_STATE": ["android.net.wifi.WifiManager$MulticastLock.acquire()void  ", "android.net.wifi.WifiManager$MulticastLock.release()void  "], "android.permission.ACCESS_COARSE_LOCATION": ["android.location.LocationManager.addGpsStatusListener(android.location.GpsStatus$Listener)boolean  ", "android.location.LocationManager.addNmeaListener(android.location.GpsStatus$NmeaListener)boolean  ", "android.location.LocationManager.addProximityAlert(double,double,float,long,android.app.PendingIntent)void  ", "android.location.LocationManager.getBestProvider(android.location.Criteria,boolean)java.lang.String  ", "android.location.LocationManager.getLastKnownLocation(java.lang.String)android.location.Location  ", "android.location.LocationManager.getProvider(java.lang.String)android.location.LocationProvider  ", "android.location.LocationManager.getProviders(android.location.Criteria,boolean)java.util.List  ", "android.location.LocationManager.getProviders(boolean)java.util.List  ", "android.location.LocationManager.removeProximityAlert(android.app.PendingIntent)void  ", "android.location.LocationManager.removeUpdates(android.app.PendingIntent)void  ", "android.location.LocationManager.removeUpdates(android.location.LocationListener)void  ", "android.location.LocationManager.requestLocationUpdates(java.lang.String,long,float,android.app.PendingIntent)void  ", "android.location.LocationManager.requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener)void  ", "android.location.LocationManager.requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener,android.os.Looper)void  ", "android.location.LocationManager.requestLocationUpdates(long,float,android.location.Criteria,android.app.PendingIntent)void  ", "android.location.LocationManager.requestLocationUpdates(long,float,android.location.Criteria,android.location.LocationListener,android.os.Looper)void  ", "android.location.LocationManager.requestSingleUpdate(android.location.Criteria,android.app.PendingIntent)void  ", "android.location.LocationManager.requestSingleUpdate(android.location.Criteria,android.location.LocationListener,android.os.Looper)void  ", "android.location.LocationManager.requestSingleUpdate(java.lang.String,android.app.PendingIntent)void  ", "android.location.LocationManager.requestSingleUpdate(java.lang.String,android.location.LocationListener,android.os.Looper)void  ", "android.location.LocationManager.sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)boolean  ", "android.telephony.TelephonyManager.listen(android.telephony.PhoneStateListener,int)void  "], "android.permission.AUTHENTICATE_ACCOUNTS": ["android.accounts.AccountManager.addAccountExplicitly(android.accounts.Account,java.lang.String,android.os.Bundle)boolean  ", "android.accounts.AccountManager.getPassword(android.accounts.Account)java.lang.String  ", "android.accounts.AccountManager.getUserData(android.accounts.Account,java.lang.String)java.lang.String  ", "android.accounts.AccountManager.peekAuthToken(android.accounts.Account,java.lang.String)java.lang.String  ", "android.accounts.AccountManager.setAuthToken(android.accounts.Account,java.lang.String,java.lang.String)void  ", "android.accounts.AccountManager.setPassword(android.accounts.Account,java.lang.String)void  ", "android.accounts.AccountManager.setUserData(android.accounts.Account,java.lang.String,java.lang.String)void  "], "android.permission.ACCESS_WIFI_STATE": ["android.net.sip.SipAudioCall.startAudio()void  ", "android.net.wifi.WifiManager.getConfiguredNetworks()java.util.List  ", "android.net.wifi.WifiManager.getConnectionInfo()android.net.wifi.WifiInfo  ", "android.net.wifi.WifiManager.getDhcpInfo()android.net.DhcpInfo  ", "android.net.wifi.WifiManager.getScanResults()java.util.List  ", "android.net.wifi.WifiManager.getWifiState()int  ", "android.net.wifi.WifiManager.is5GHzBandSupported()boolean  ", "android.net.wifi.WifiManager.isDeviceToApRttSupported()boolean  ", "android.net.wifi.WifiManager.isEnhancedPowerReportingSupported()boolean  ", "android.net.wifi.WifiManager.isP2pSupported()boolean  ", "android.net.wifi.WifiManager.isPreferredNetworkOffloadSupported()boolean  ", "android.net.wifi.WifiManager.isScanAlwaysAvailable()boolean  ", "android.net.wifi.WifiManager.isTdlsSupported()boolean  ", "android.net.wifi.WifiManager.isWifiEnabled()boolean  ", "android.net.wifi.WifiManager.pingSupplicant()boolean  ", "android.net.wifi.p2p.WifiP2pManager.initialize(android.content.Context,android.os.Looper,android.net.wifi.p2p.WifiP2pManager$ChannelListener)android.net.wifi.p2p.WifiP2pManager$Channel  "], "android.permission.DISABLE_KEYGUARD": ["android.app.KeyguardManager$KeyguardLock.disableKeyguard()void  ", "android.app.KeyguardManager$KeyguardLock.reenableKeyguard()void  ", "android.app.KeyguardManager.exitKeyguardSecurely(android.app.KeyguardManager$OnKeyguardExitResult)void  "], "android.permission.INTERNET": ["android.net.ConnectivityManager.reportBadNetwork(android.net.Network)void  "], "android.permission.BLUETOOTH_ADMIN": ["android.bluetooth.BluetoothAdapter.cancelDiscovery()boolean  ", "android.bluetooth.BluetoothAdapter.disable()boolean  ", "android.bluetooth.BluetoothAdapter.enable()boolean  ", "android.bluetooth.BluetoothAdapter.setName(java.lang.String)boolean  ", "android.bluetooth.BluetoothAdapter.startDiscovery()boolean  ", "android.bluetooth.BluetoothAdapter.stopLeScan(android.bluetooth.BluetoothAdapter$LeScanCallback)void  ", "android.bluetooth.BluetoothDevice.createBond()boolean  ", "android.bluetooth.BluetoothDevice.setPairingConfirmation(boolean)boolean  ", "android.bluetooth.BluetoothDevice.setPin([byte)boolean  ", "android.bluetooth.BluetoothHeadset.sendVendorSpecificResultCode(android.bluetooth.BluetoothDevice,java.lang.String,java.lang.String)boolean  ", "android.bluetooth.BluetoothHeadset.startVoiceRecognition(android.bluetooth.BluetoothDevice)boolean  ", "android.bluetooth.BluetoothHeadset.stopVoiceRecognition(android.bluetooth.BluetoothDevice)boolean  ", "android.bluetooth.le.BluetoothLeAdvertiser.stopAdvertising(android.bluetooth.le.AdvertiseCallback)void  ", "android.bluetooth.le.BluetoothLeScanner.stopScan(android.bluetooth.le.ScanCallback)void  "], "android.permission.MODIFY_AUDIO_SETTINGS": ["android.media.AudioManager.setBluetoothScoOn(boolean)void  ", "android.media.AudioManager.setMicrophoneMute(boolean)void  ", "android.media.AudioManager.setMode(int)void  ", "android.media.AudioManager.setSpeakerphoneOn(boolean)void  ", "android.media.AudioManager.startBluetoothSco()void  ", "android.media.AudioManager.stopBluetoothSco()void  ", "android.net.sip.SipAudioCall.setSpeakerMode(boolean)void  "], "android.permission.TRANSMIT_IR": ["android.hardware.ConsumerIrManager.getCarrierFrequencies()android.hardware.ConsumerIrManager$CarrierFrequencyRange[]  ", "android.hardware.ConsumerIrManager.transmit(int,[int)void  "], "android.permission.READ_PHONE_STATE": ["android.telecom.TelecomManager.isInCall()boolean  ", "android.telecom.TelecomManager.showInCallScreen(boolean)void  ", "android.telephony.PhoneNumberUtils.isVoiceMailNumber(java.lang.String)boolean  ", "android.telephony.SmsManager.divideMessage(java.lang.String)java.util.ArrayList  ", "android.telephony.TelephonyManager.getDeviceId()java.lang.String  ", "android.telephony.TelephonyManager.getDeviceSoftwareVersion()java.lang.String  ", "android.telephony.TelephonyManager.getGroupIdLevel1()java.lang.String  ", "android.telephony.TelephonyManager.getLine1Number()java.lang.String  ", "android.telephony.TelephonyManager.getSimSerialNumber()java.lang.String  ", "android.telephony.TelephonyManager.getSubscriberId()java.lang.String  ", "android.telephony.TelephonyManager.getVoiceMailAlphaTag()java.lang.String  ", "android.telephony.TelephonyManager.getVoiceMailNumber()java.lang.String  ", "android.telephony.TelephonyManager.listen(android.telephony.PhoneStateListener,int)void  ", "android.telephony.gsm.SmsManager.divideMessage(java.lang.String)java.util.ArrayList  "], "android.permission.ACCESS_FINE_LOCATION": ["android.location.LocationManager.addGpsStatusListener(android.location.GpsStatus$Listener)boolean  ", "android.location.LocationManager.addNmeaListener(android.location.GpsStatus$NmeaListener)boolean  ", "android.location.LocationManager.addProximityAlert(double,double,float,long,android.app.PendingIntent)void  ", "android.location.LocationManager.getBestProvider(android.location.Criteria,boolean)java.lang.String  ", "android.location.LocationManager.getLastKnownLocation(java.lang.String)android.location.Location  ", "android.location.LocationManager.getProvider(java.lang.String)android.location.LocationProvider  ", "android.location.LocationManager.getProviders(android.location.Criteria,boolean)java.util.List  ", "android.location.LocationManager.getProviders(boolean)java.util.List  ", "android.location.LocationManager.removeProximityAlert(android.app.PendingIntent)void  ", "android.location.LocationManager.removeUpdates(android.app.PendingIntent)void  ", "android.location.LocationManager.removeUpdates(android.location.LocationListener)void  ", "android.location.LocationManager.requestLocationUpdates(java.lang.String,long,float,android.app.PendingIntent)void  ", "android.location.LocationManager.requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener)void  ", "android.location.LocationManager.requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener,android.os.Looper)void  ", "android.location.LocationManager.requestLocationUpdates(long,float,android.location.Criteria,android.app.PendingIntent)void  ", "android.location.LocationManager.requestLocationUpdates(long,float,android.location.Criteria,android.location.LocationListener,android.os.Looper)void  ", "android.location.LocationManager.requestSingleUpdate(android.location.Criteria,android.app.PendingIntent)void  ", "android.location.LocationManager.requestSingleUpdate(android.location.Criteria,android.location.LocationListener,android.os.Looper)void  ", "android.location.LocationManager.requestSingleUpdate(java.lang.String,android.app.PendingIntent)void  ", "android.location.LocationManager.requestSingleUpdate(java.lang.String,android.location.LocationListener,android.os.Looper)void  ", "android.location.LocationManager.sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)boolean  ", "android.telephony.TelephonyManager.getAllCellInfo()java.util.List  ", "android.telephony.TelephonyManager.getCellLocation()android.telephony.CellLocation  ", "android.telephony.TelephonyManager.getNeighboringCellInfo()java.util.List  "], "android.permission.ACCESS_LOCATION_EXTRA_COMMANDS": ["android.location.LocationManager.sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)boolean  "], "android.permission.GET_ACCOUNTS": ["android.accounts.AccountManager.addOnAccountsUpdatedListener(android.accounts.OnAccountsUpdateListener,android.os.Handler,boolean)void  ", "android.accounts.AccountManager.getAccounts()android.accounts.Account[]  ", "android.accounts.AccountManager.getAccountsByType(java.lang.String)android.accounts.Account[]  "], "android.permission.BROADCAST_STICKY": ["android.accounts.AccountAuthenticatorActivity.removeStickyBroadcast(android.content.Intent)void  ", "android.accounts.AccountAuthenticatorActivity.removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)void  ", "android.accounts.AccountAuthenticatorActivity.sendStickyBroadcast(android.content.Intent)void  ", "android.accounts.AccountAuthenticatorActivity.sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)void  ", "android.accounts.AccountAuthenticatorActivity.sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)void  ", "android.accounts.AccountAuthenticatorActivity.sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)void  ", "android.app.Activity.removeStickyBroadcast(android.content.Intent)void  ", "android.app.Activity.removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)void  ", "android.app.Activity.sendStickyBroadcast(android.content.Intent)void  ", "android.app.Activity.sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)void  ", "android.app.Activity.sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)void  ", "android.app.Activity.sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)void  ", "android.app.ActivityGroup.removeStickyBroadcast(android.content.Intent)void  ", "android.app.ActivityGroup.removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)void  ", "android.app.ActivityGroup.sendStickyBroadcast(android.content.Intent)void  ", "android.app.ActivityGroup.sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)void  ", "android.app.ActivityGroup.sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)void  ", "android.app.ActivityGroup.sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)void  ", "android.app.AliasActivity.removeStickyBroadcast(android.content.Intent)void  ", "android.app.AliasActivity.removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)void  ", "android.app.AliasActivity.sendStickyBroadcast(android.content.Intent)void  ", "android.app.AliasActivity.sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)void  ", "android.app.AliasActivity.sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)void  ", "android.app.AliasActivity.sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)void  ", "android.app.Application.removeStickyBroadcast(android.content.Intent)void  ", "android.app.Application.removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)void  ", "android.app.Application.sendStickyBroadcast(android.content.Intent)void  ", "android.app.Application.sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)void  ", "android.app.Application.sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)void  ", "android.app.Application.sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)void  ", "android.app.ExpandableListActivity.removeStickyBroadcast(android.content.Intent)void  ", "android.app.ExpandableListActivity.removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)void  ", "android.app.ExpandableListActivity.sendStickyBroadcast(android.content.Intent)void  ", "android.app.ExpandableListActivity.sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)void  ", "android.app.ExpandableListActivity.sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)void  ", "android.app.ExpandableListActivity.sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)void  ", "android.app.ListActivity.removeStickyBroadcast(android.content.Intent)void  ", "android.app.ListActivity.removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)void  ", "android.app.ListActivity.sendStickyBroadcast(android.content.Intent)void  ", "android.app.ListActivity.sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)void  ", "android.app.ListActivity.sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)void  ", "android.app.ListActivity.sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)void  ", "android.app.NativeActivity.removeStickyBroadcast(android.content.Intent)void  ", "android.app.NativeActivity.removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)void  ", "android.app.NativeActivity.sendStickyBroadcast(android.content.Intent)void  ", "android.app.NativeActivity.sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)void  ", "android.app.NativeActivity.sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)void  ", "android.app.NativeActivity.sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)void  ", "android.app.TabActivity.removeStickyBroadcast(android.content.Intent)void  ", "android.app.TabActivity.removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)void  ", "android.app.TabActivity.sendStickyBroadcast(android.content.Intent)void  ", "android.app.TabActivity.sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)void  ", "android.app.TabActivity.sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)void  ", "android.app.TabActivity.sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)void  ", "android.app.backup.BackupAgentHelper.removeStickyBroadcast(android.content.Intent)void  ", "android.app.backup.BackupAgentHelper.removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)void  ", "android.app.backup.BackupAgentHelper.sendStickyBroadcast(android.content.Intent)void  ", "android.app.backup.BackupAgentHelper.sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)void  ", "android.app.backup.BackupAgentHelper.sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)void  ", "android.app.backup.BackupAgentHelper.sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)void  ", "android.content.ContextWrapper.removeStickyBroadcast(android.content.Intent)void  ", "android.content.ContextWrapper.removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)void  ", "android.content.ContextWrapper.sendStickyBroadcast(android.content.Intent)void  ", "android.content.ContextWrapper.sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)void  ", "android.content.ContextWrapper.sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)void  ", "android.content.ContextWrapper.sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)void  ", "android.content.MutableContextWrapper.removeStickyBroadcast(android.content.Intent)void  ", "android.content.MutableContextWrapper.removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)void  ", "android.content.MutableContextWrapper.sendStickyBroadcast(android.content.Intent)void  ", "android.content.MutableContextWrapper.sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)void  ", "android.content.MutableContextWrapper.sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)void  ", "android.content.MutableContextWrapper.sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)void  ", "android.inputmethodservice.InputMethodService.removeStickyBroadcast(android.content.Intent)void  ", "android.inputmethodservice.InputMethodService.removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)void  ", "android.inputmethodservice.InputMethodService.sendStickyBroadcast(android.content.Intent)void  ", "android.inputmethodservice.InputMethodService.sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)void  ", "android.inputmethodservice.InputMethodService.sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)void  ", "android.inputmethodservice.InputMethodService.sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)void  ", "android.net.VpnService.removeStickyBroadcast(android.content.Intent)void  ", "android.net.VpnService.removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)void  ", "android.net.VpnService.sendStickyBroadcast(android.content.Intent)void  ", "android.net.VpnService.sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)void  ", "android.net.VpnService.sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)void  ", "android.net.VpnService.sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)void  ", "android.service.dreams.DreamService.removeStickyBroadcast(android.content.Intent)void  ", "android.service.dreams.DreamService.removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)void  ", "android.service.dreams.DreamService.sendStickyBroadcast(android.content.Intent)void  ", "android.service.dreams.DreamService.sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)void  ", "android.service.dreams.DreamService.sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)void  ", "android.service.dreams.DreamService.sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)void  ", "android.service.voice.VoiceInteractionService.removeStickyBroadcast(android.content.Intent)void  ", "android.service.voice.VoiceInteractionService.removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)void  ", "android.service.voice.VoiceInteractionService.sendStickyBroadcast(android.content.Intent)void  ", "android.service.voice.VoiceInteractionService.sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)void  ", "android.service.voice.VoiceInteractionService.sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)void  ", "android.service.voice.VoiceInteractionService.sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)void  ", "android.test.IsolatedContext.removeStickyBroadcast(android.content.Intent)void  ", "android.test.IsolatedContext.removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)void  ", "android.test.IsolatedContext.sendStickyBroadcast(android.content.Intent)void  ", "android.test.IsolatedContext.sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)void  ", "android.test.IsolatedContext.sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)void  ", "android.test.IsolatedContext.sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)void  ", "android.test.RenamingDelegatingContext.removeStickyBroadcast(android.content.Intent)void  ", "android.test.RenamingDelegatingContext.removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)void  ", "android.test.RenamingDelegatingContext.sendStickyBroadcast(android.content.Intent)void  ", "android.test.RenamingDelegatingContext.sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)void  ", "android.test.RenamingDelegatingContext.sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)void  ", "android.test.RenamingDelegatingContext.sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)void  ", "android.test.mock.MockApplication.removeStickyBroadcast(android.content.Intent)void  ", "android.test.mock.MockApplication.removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)void  ", "android.test.mock.MockApplication.sendStickyBroadcast(android.content.Intent)void  ", "android.test.mock.MockApplication.sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)void  ", "android.test.mock.MockApplication.sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)void  ", "android.test.mock.MockApplication.sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)void  ", "android.view.ContextThemeWrapper.removeStickyBroadcast(android.content.Intent)void  ", "android.view.ContextThemeWrapper.removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)void  ", "android.view.ContextThemeWrapper.sendStickyBroadcast(android.content.Intent)void  ", "android.view.ContextThemeWrapper.sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)void  ", "android.view.ContextThemeWrapper.sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)void  ", "android.view.ContextThemeWrapper.sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)void  "], "android.permission.RECEIVE_MMS": ["android.telephony.SmsManager.downloadMultimediaMessage(android.content.Context,java.lang.String,android.net.Uri,android.os.Bundle,android.app.PendingIntent)void  "], "android.permission.BLUETOOTH": ["android.bluetooth.BluetoothA2dp.getConnectedDevices()java.util.List  ", "android.bluetooth.BluetoothA2dp.getConnectionState(android.bluetooth.BluetoothDevice)int  ", "android.bluetooth.BluetoothA2dp.getDevicesMatchingConnectionStates([int)java.util.List  ", "android.bluetooth.BluetoothA2dp.isA2dpPlaying(android.bluetooth.BluetoothDevice)boolean  ", "android.bluetooth.BluetoothAdapter.cancelDiscovery()boolean  ", "android.bluetooth.BluetoothAdapter.closeProfileProxy(int,android.bluetooth.BluetoothProfile)void  ", "android.bluetooth.BluetoothAdapter.enable()boolean  ", "android.bluetooth.BluetoothAdapter.getAddress()java.lang.String  ", "android.bluetooth.BluetoothAdapter.getBluetoothLeAdvertiser()android.bluetooth.le.BluetoothLeAdvertiser  ", "android.bluetooth.BluetoothAdapter.getBluetoothLeScanner()android.bluetooth.le.BluetoothLeScanner  ", "android.bluetooth.BluetoothAdapter.getBondedDevices()java.util.Set  ", "android.bluetooth.BluetoothAdapter.getName()java.lang.String  ", "android.bluetooth.BluetoothAdapter.getProfileConnectionState(int)int  ", "android.bluetooth.BluetoothAdapter.getProfileProxy(android.content.Context,android.bluetooth.BluetoothProfile$ServiceListener,int)boolean  ", "android.bluetooth.BluetoothAdapter.getScanMode()int  ", "android.bluetooth.BluetoothAdapter.getState()int  ", "android.bluetooth.BluetoothAdapter.isDiscovering()boolean  ", "android.bluetooth.BluetoothAdapter.isEnabled()boolean  ", "android.bluetooth.BluetoothAdapter.isMultipleAdvertisementSupported()boolean  ", "android.bluetooth.BluetoothAdapter.isOffloadedFilteringSupported()boolean  ", "android.bluetooth.BluetoothAdapter.isOffloadedScanBatchingSupported()boolean  ", "android.bluetooth.BluetoothAdapter.listenUsingInsecureRfcommWithServiceRecord(java.lang.String,java.util.UUID)android.bluetooth.BluetoothServerSocket  ", "android.bluetooth.BluetoothAdapter.listenUsingRfcommWithServiceRecord(java.lang.String,java.util.UUID)android.bluetooth.BluetoothServerSocket  ", "android.bluetooth.BluetoothAdapter.setName(java.lang.String)boolean  ", "android.bluetooth.BluetoothAdapter.startDiscovery()boolean  ", "android.bluetooth.BluetoothAdapter.startLeScan([java.util.UUID,android.bluetooth.BluetoothAdapter$LeScanCallback)boolean  ", "android.bluetooth.BluetoothAdapter.startLeScan(android.bluetooth.BluetoothAdapter$LeScanCallback)boolean  ", "android.bluetooth.BluetoothAdapter.stopLeScan(android.bluetooth.BluetoothAdapter$LeScanCallback)void  ", "android.bluetooth.BluetoothDevice.connectGatt(android.content.Context,boolean,android.bluetooth.BluetoothGattCallback)android.bluetooth.BluetoothGatt  ", "android.bluetooth.BluetoothDevice.createInsecureRfcommSocketToServiceRecord(java.util.UUID)android.bluetooth.BluetoothSocket  ", "android.bluetooth.BluetoothDevice.createRfcommSocketToServiceRecord(java.util.UUID)android.bluetooth.BluetoothSocket  ", "android.bluetooth.BluetoothDevice.fetchUuidsWithSdp()boolean  ", "android.bluetooth.BluetoothDevice.getBluetoothClass()android.bluetooth.BluetoothClass  ", "android.bluetooth.BluetoothDevice.getBondState()int  ", "android.bluetooth.BluetoothDevice.getName()java.lang.String  ", "android.bluetooth.BluetoothDevice.getType()int  ", "android.bluetooth.BluetoothDevice.getUuids()android.os.ParcelUuid[]  ", "android.bluetooth.BluetoothGatt.abortReliableWrite()void  ", "android.bluetooth.BluetoothGatt.abortReliableWrite(android.bluetooth.BluetoothDevice)void  ", "android.bluetooth.BluetoothGatt.beginReliableWrite()boolean  ", "android.bluetooth.BluetoothGatt.close()void  ", "android.bluetooth.BluetoothGatt.connect()boolean  ", "android.bluetooth.BluetoothGatt.disconnect()void  ", "android.bluetooth.BluetoothGatt.discoverServices()boolean  ", "android.bluetooth.BluetoothGatt.executeReliableWrite()boolean  ", "android.bluetooth.BluetoothGatt.readCharacteristic(android.bluetooth.BluetoothGattCharacteristic)boolean  ", "android.bluetooth.BluetoothGatt.readDescriptor(android.bluetooth.BluetoothGattDescriptor)boolean  ", "android.bluetooth.BluetoothGatt.readRemoteRssi()boolean  ", "android.bluetooth.BluetoothGatt.requestConnectionPriority(int)boolean  ", "android.bluetooth.BluetoothGatt.requestMtu(int)boolean  ", "android.bluetooth.BluetoothGatt.setCharacteristicNotification(android.bluetooth.BluetoothGattCharacteristic,boolean)boolean  ", "android.bluetooth.BluetoothGatt.writeCharacteristic(android.bluetooth.BluetoothGattCharacteristic)boolean  ", "android.bluetooth.BluetoothGatt.writeDescriptor(android.bluetooth.BluetoothGattDescriptor)boolean  ", "android.bluetooth.BluetoothGattServer.addService(android.bluetooth.BluetoothGattService)boolean  ", "android.bluetooth.BluetoothGattServer.cancelConnection(android.bluetooth.BluetoothDevice)void  ", "android.bluetooth.BluetoothGattServer.clearServices()void  ", "android.bluetooth.BluetoothGattServer.close()void  ", "android.bluetooth.BluetoothGattServer.connect(android.bluetooth.BluetoothDevice,boolean)boolean  ", "android.bluetooth.BluetoothGattServer.notifyCharacteristicChanged(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothGattCharacteristic,boolean)boolean  ", "android.bluetooth.BluetoothGattServer.removeService(android.bluetooth.BluetoothGattService)boolean  ", "android.bluetooth.BluetoothGattServer.sendResponse(android.bluetooth.BluetoothDevice,int,int,int,[byte)boolean  ", "android.bluetooth.BluetoothHeadset.getConnectedDevices()java.util.List  ", "android.bluetooth.BluetoothHeadset.getConnectionState(android.bluetooth.BluetoothDevice)int  ", "android.bluetooth.BluetoothHeadset.getDevicesMatchingConnectionStates([int)java.util.List  ", "android.bluetooth.BluetoothHeadset.isAudioConnected(android.bluetooth.BluetoothDevice)boolean  ", "android.bluetooth.BluetoothHeadset.sendVendorSpecificResultCode(android.bluetooth.BluetoothDevice,java.lang.String,java.lang.String)boolean  ", "android.bluetooth.BluetoothHeadset.startVoiceRecognition(android.bluetooth.BluetoothDevice)boolean  ", "android.bluetooth.BluetoothHeadset.stopVoiceRecognition(android.bluetooth.BluetoothDevice)boolean  ", "android.bluetooth.BluetoothHealth.connectChannelToSource(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration)boolean  ", "android.bluetooth.BluetoothHealth.disconnectChannel(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration,int)boolean  ", "android.bluetooth.BluetoothHealth.getConnectedDevices()java.util.List  ", "android.bluetooth.BluetoothHealth.getConnectionState(android.bluetooth.BluetoothDevice)int  ", "android.bluetooth.BluetoothHealth.getDevicesMatchingConnectionStates([int)java.util.List  ", "android.bluetooth.BluetoothHealth.getMainChannelFd(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration)android.os.ParcelFileDescriptor  ", "android.bluetooth.BluetoothHealth.registerSinkAppConfiguration(java.lang.String,int,android.bluetooth.BluetoothHealthCallback)boolean  ", "android.bluetooth.BluetoothHealth.unregisterAppConfiguration(android.bluetooth.BluetoothHealthAppConfiguration)boolean  ", "android.bluetooth.BluetoothManager.getConnectedDevices(int)java.util.List  ", "android.bluetooth.BluetoothManager.getConnectionState(android.bluetooth.BluetoothDevice,int)int  ", "android.bluetooth.BluetoothManager.getDevicesMatchingConnectionStates(int,[int)java.util.List  ", "android.bluetooth.BluetoothManager.openGattServer(android.content.Context,android.bluetooth.BluetoothGattServerCallback)android.bluetooth.BluetoothGattServer  ", "android.bluetooth.BluetoothSocket.connect()void  ", "android.bluetooth.le.BluetoothLeAdvertiser.startAdvertising(android.bluetooth.le.AdvertiseSettings,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseCallback)void  ", "android.bluetooth.le.BluetoothLeAdvertiser.startAdvertising(android.bluetooth.le.AdvertiseSettings,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseCallback)void  ", "android.bluetooth.le.BluetoothLeAdvertiser.stopAdvertising(android.bluetooth.le.AdvertiseCallback)void  ", "android.bluetooth.le.BluetoothLeScanner.flushPendingScanResults(android.bluetooth.le.ScanCallback)void  ", "android.bluetooth.le.BluetoothLeScanner.startScan(android.bluetooth.le.ScanCallback)void  ", "android.bluetooth.le.BluetoothLeScanner.startScan(java.util.List,android.bluetooth.le.ScanSettings,android.bluetooth.le.ScanCallback)void  ", "android.bluetooth.le.BluetoothLeScanner.stopScan(android.bluetooth.le.ScanCallback)void  "], "android.permission.ACCESS_MOCK_LOCATION": ["android.location.LocationManager.addTestProvider(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,int,int)void  ", "android.location.LocationManager.clearTestProviderEnabled(java.lang.String)void  ", "android.location.LocationManager.clearTestProviderLocation(java.lang.String)void  ", "android.location.LocationManager.clearTestProviderStatus(java.lang.String)void  ", "android.location.LocationManager.removeTestProvider(java.lang.String)void  ", "android.location.LocationManager.setTestProviderEnabled(java.lang.String,boolean)void  ", "android.location.LocationManager.setTestProviderLocation(java.lang.String,android.location.Location)void  ", "android.location.LocationManager.setTestProviderStatus(java.lang.String,int,android.os.Bundle,long)void  "], "android.permission.USE_CREDENTIALS": ["android.accounts.AccountManager.invalidateAuthToken(java.lang.String,java.lang.String)void  "]}